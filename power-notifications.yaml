blueprint:
  name: Power-dependant state notification
  description: Send a notification based on the power level of something
  domain: automation
  author: tlanfer
  source_url: https://github.com/tlanfer/ha-blueprints/blob/main/power-notifications.yaml

  input:
    switch_entity:
      name: Switch entity
      description: The entity to control
      selector:
        entity:
          domain: switch

    power_entity:
      name: Power sensor
      selector:
        entity:
          filter:
            domain: sensor
            device_class: power

    power_threshold:
      name: Power threshold
      description: At what threshold should the device be considered on
      default: 10
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: watt

    power_on_duration:
      name: Power on duration
      description: How long to be above the threshold
      default: 5
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds

    power_off_duration:
      name: Power off duration
      description: How long to be below the threshold
      default: 5
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds

    energy_meter:
      name: Energy meter
      description: Entity that measures the used energy
      selector:
        entity:
          filter:
            domain: sensor
            device_class: energy

    turn_off_after_done:
      name: Turn off after done
      description: Turn off the device after power has gone below threshold
      default: false
      selector:
          boolean:

    notification_device:
      name: Devices
      description: Devices to notify when done
      selector:
        device:
          filter:
            integration: mobile_app

    notification_title:
      name: Notification title
      description: Title for the notification
      default: ""
      selector:
        text:

    notification_message_template:
      name: Notification body
      description: Allows templating.
      selector:
        text:
          multiline: true

mode: restart

trigger:
  platform: numeric_state
  entity_id: !input power_entity
  above: !input power_threshold
  for: !input power_on_duration

action:
  - variables:
      input_energy_meter: !input energy_meter
      energy_total_before: "{{ states(input_energy_meter) }}"
      date_start: "{{ as_timestamp(now()) }}"
      turn_off_after_done: !input turn_off_after_done

  - alias: "Wait for power to fall"
    wait_for_trigger:
      - platform: numeric_state
        entity_id: !input power_entity
        below: !input power_threshold
        for: !input power_off_duration
    timeout:
      hours: 24
    continue_on_timeout: false

  - variables:
      energy_total_after: "{{ states(input_energy_meter) }}"
      energy_total_diff: "{{ energy_total_after - energy_total_before }}"
      date_end: "{{ as_timestamp(now()) }}"
      date_diff: "{{ date_end - date_start }}"

  - alias: "Notify"
    domain: mobile_app
    type: notify
    device_id: !input notification_device
    title: !input notification_title
    message: !input notification_message_template

  - alias: "Check if device should be turned off"
    condition: "{{ turn_off_after_done }}"

  - alias: "Turn off device"
    service: switch.turn_off
    target:
      entity_id: !input switch_entity